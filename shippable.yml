# Shippable CI/CD configuration file.
# http://docs.shippable.com/en/latest/config.html#configuration
language:
  python

python:
  - 3.6

env:
  global:
    - secure: SFETafRD6dK9rHKP3GILCU+fX+7NeMSowrQ2ThLFuhLk0Dbe3XG3ThvyduwqXA4Q95u943icgQ0yON20cVLEmN98EwGTDEl1bADEYsIiaf4fSZAQWBn8g+OANXznFzQh4U4Iii/LPUm4k6PxUscZB5rnLoy9RIjF2ZyAYTbbRzyhZ54OVX/q4UVL3Zkntg+2iJButGYK6aWSNkQBqrm5UOe6zv2w6TA/yvWn5RPfwVRqiukUsjyPm/QXtc1Rmv/k7R8LBcbvsn9mvPO6SskSg7xgm+bXNpxQ2ib9prKAy7kR+LqxqR/RPje+5WVJw+Q1nzoP3ALXBeUvQcuXNX5vMiomWyur1oPcPXyhPbbuMjGkNCzjgZzeabqf5PZwvEDgYq/yA5bb4n3XUv+o9NBfpjZql/Y7t1+qPbQqwbJkb9n4QL0jZbL9QOasQ6ZO7b5gLKimDDeZOtjTebW8fi0hGkQt3UBoAgNAaUjMkJOA6akKKCrVCrR2a5JoJ8mw4dyA1vrzaDTtRj8BtyEBLIiLow58ZFRk9ACZrqFEbRELgnc+xOp6H5djBwmLCUYLAg3LoDA5YREThBdVlRyFJrMbZ/fC1Tlkswtk3TawWEcKcKtYAKo0BBmtK1vDFZjyC/Q9XaeUojXvXCK46XYrxOdi0oD3ZYz7lVh0mzIYYt0B7U7Xjj08cf95wjg0vMRYU+6meQnvw+O+SFSUymPGhtxaIbuYMEimkF+UKtnhvtU3vSnlfBXA7iV6tBIOC+uFIJaES8+bu4+gHC/h+Yii1zPefRil7JSLdEtqpDLvfuww1oaA3I8bTsWb2qpzSWQ8ILVr69Ad2UrDSlLjO4vCDl/MNxZv+JQRvdVzcrJ0K+Ce7u1sTickaqQzGfVRlEC9jVrEiynJ4tOxWfenLkdETlNE5Bq+AsC7OvnNteMxROV87CJ+3Id00lnSyVpgScyPpQDDyxOZPthzGKZlvJqE+a4dJOLtF60VumtYQhLNp9jj95oBCCvf8w+2c8/elk9x64rY

services:
  - postgres
  - redis
  - selenium

build:
  pre_ci_boot:
    image_name: drydock/u16pytall
    image_tag: v5.10.2

  ci:
    # Install system (os) dependencies
    - export LC_ALL=C
    - sudo apt-get update && sudo apt-get -y install python3-pip libjpeg-dev libjpeg8-dev binutils libproj-dev gdal-bin openssl libssl-dev libxrender-dev libx11-dev libxext-dev libfontconfig1-dev libfreetype6-dev fontconfig
    # Shippable uses elasticsearch 6.x, which is not supported by qcat. Install 2.x manually.
    - wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.4.6/elasticsearch-2.4.6.deb
    - dpkg -i elasticsearch-2.4.6.deb
    - service elasticsearch start
    # Install wkhtmltopdf for pdf generation
    - wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
    - tar xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
    - mv wkhtmltox/bin/wkhtmlto* /usr/local/bin
    # Setup database with postgis...
    - psql -c "create role shippable with superuser login password '123456'" -U postgres
    - psql -c 'create database qcat;' -U postgres
    - psql -d "qcat" -U postgres -c "create extension postgis"
    # ...and minimal required env vars
    - echo "`pwd`/apps" > `python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`/_qcat_path.pth
    - echo "DevDefaultSite" > envs/DJANGO_CONFIGURATION
    - echo "qcat.settings" > envs/DJANGO_SETTINGS_MODULE
    - echo "postgis://shippable:123456@localhost:5432/qcat" > envs/DATABASE_URL
    - echo "123" > envs/DJANGO_SECRET_KEY
    - echo "True" > envs/DJANGO_DEBUG
    - echo "" > envs/NEXT_MAINTENANCE
    # Install python packages.
    - pip install -r requirements/development.txt
    - pip install -r requirements/production.txt
    # Run tests, and put results to folders read by shippable.
    - export DISPLAY=:99.0
    - mkdir -p shippable/testresults
    - mkdir -p shippable/codecoverage
    - mkdir ../upload
    - xvfb-run --server-args="-ac" python manage.py test -a unit --with-xunit --xunit-file=shippable/testresults/nosetests.xml --with-coverage --cover-package=apps --cover-xml --cover-xml-file=shippable/codecoverage/coverage.xml
    - unset LC_ALL

  on_success:
    - fab deploy:$BRANCH

  cache: true

branches:
  only:
    - develop
    - master

integrations:
  notifications:
    - integrationName: slack-integration
      type: slack
      recipients:
        - "#server-info"
      on_success: never
      on_failure: always

    - integrationName: email
      type: email
      on_success: never
      on_failure: never
      on_pull_request: never
